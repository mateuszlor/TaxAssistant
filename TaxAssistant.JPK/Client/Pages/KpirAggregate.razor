@page "/kpir-aggregate"

@using Newtonsoft.Json
@using TaxAssistant.JPK.Shared.Commands
@using TaxAssistant.JPK.Shared.Model.Database.Kpir
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using System.Text.Json.Serialization
@using Microsoft.AspNetCore.WebUtilities

@inject NavigationManager NavigationManager
@inject HttpClient Http

<PageTitle>KPIR</PageTitle>

<h1>Aggregated KPIR</h1>

@if (isLoading)
{
    <Loading />
}
else
{
    <button class="button" @onclick="@OnAggregate">Save agregated KPiR</button>

    @foreach (var id in ids)
    {
        <CollapsableSection Title="@string.Format("KPiR {0}", id)" Collapsed="true">
            <KpirDetails KpirId=id />
        </CollapsableSection>
    }

    @if (aggregatedKpir != null)
    {
        <KpirDetailsSummary Kpir=@aggregatedKpir />

        <KpirDetailsRows Kpir=@aggregatedKpir />
    }
}

@code {
    private IList<Guid> ids { get; set; }

    private bool isLoading;

    private Kpir? aggregatedKpir;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        try
        {
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

            if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("id", out var param))
            {
                ids = param.Select(Guid.Parse).ToList();
            }
        }
        finally
        {
            isLoading = false;
        }
    }

    protected async Task OnAggregate(MouseEventArgs args)
    {
        isLoading = true;

        try
        {
            var body = new AggregateKpirCommand
            {
                Ids = ids
            };

            var response = await Http.PostAsJsonAsync("Aggregate", body);
            var stringResponse = await response.Content.ReadAsStringAsync();

            var result = JsonConvert.DeserializeObject<AggregateKpirCommandResult>(stringResponse);
            aggregatedKpir = result.AggregatedKpir;
        }
        finally
        {
            isLoading = false;
        }
    }
}
