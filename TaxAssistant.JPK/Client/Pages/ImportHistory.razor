@page "/import-history"

@using Newtonsoft.Json
@using TaxAssistant.JPK.Shared.Model
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using System.Text.Json.Serialization
@using TaxAssistant.JPK.Shared.Model.Database

@inject HttpClient Http

<PageTitle>Import history</PageTitle>

<h1>Import history</h1>

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if(@imports == null)
{
    <div class="alert alert-danger">No imports found</div>
}
else 
{
    <h2>T1</h2>
    <Table DataSource=@imports>
        <Column TRow="Import" Title="Import date">@context.CreationDate</Column>
        <Column TRow="Import" Title="KPiR">@context.KpirId</Column>
        <Column TRow="Import" Title="Deleted">@context.Kpir?.IsDeleted</Column>
    </Table>
    
    <h2>T2</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Import data</th>
                <th>KPiR</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in @imports)
        {
            <tr>
                <td>@item.CreationDate</td>
                <td><a href="/kpir-list/@item.KpirId">Preview @item.KpirId</a></td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IList<Import>? imports;
    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        try
        {
            var response = await Http.GetAsync("ImportHistory");

            var stringContent = await response.Content.ReadAsStringAsync();

            imports = JsonConvert.DeserializeObject<IList<Import>>(stringContent);
            Console.WriteLine("Loaded data");
        }
        finally
        {
            isLoading = false;
        }
    }
}
