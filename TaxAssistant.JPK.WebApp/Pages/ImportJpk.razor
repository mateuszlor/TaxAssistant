@page "/import-jpk"
@using TaxAssistant.JPK.Shared.Model
@using System.Text.Json;
@using System.Text.Json.Serialization;
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<InputFile OnChange="@LoadFiles" multiple />

@if (importResult == null)
{
    <p><em>Please import file</em></p>
}
else if (isImporting)
{
    <p>Importing......</p>
}
else
{
    <div>
        Import status: @importResult.IsSuccessful
    </div>

@*    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in importResult.Kpir)
            {
                <tr>
                    <td>@importResult.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>*@
}

@code {
    private ImportResult? importResult;
    private bool isImporting;

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        isImporting = true;

        var file = e.GetMultipleFiles(1).Single();

        using (var stream = file.OpenReadStream())
        {
            using (var reader = new StreamReader(stream))
            {
                var fileContent = await reader.ReadToEndAsync();

                Console.WriteLine("File:");
                Console.WriteLine(fileContent);

                var postResult = await Http.PostAsJsonAsync<string>("Import", fileContent);
                var stringResponse = await postResult.Content.ReadAsStringAsync();

                Console.WriteLine("Result:");
                Console.WriteLine(stringResponse);

                importResult = JsonSerializer.Deserialize<ImportResult>(stringResponse);
            }
        }

        isImporting = false;
    }
}
